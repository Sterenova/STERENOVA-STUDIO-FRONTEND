name: Create Release

on:
  push:
    tags: [ 'v*' ]

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      issues: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version
        id: get_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          echo "✅ Creating release for version: ${VERSION}"

      - name: Generate changelog
        id: changelog
        uses: actions/github-script@v7
        with:
          script: |
            const { data: commits } = await github.rest.repos.compareCommits({
              owner: context.repo.owner,
              repo: context.repo.repo,
              base: 'main',
              head: context.sha
            });
            
            const changelog = commits.commits
              .map(commit => `- ${commit.commit.message.split('\n')[0]} (${commit.sha.substring(0, 7)})`)
              .join('\n');
            
            return changelog || '- No changes detected';

      - name: Create Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.tag }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          body: |
            ## 🚀 Release ${{ steps.get_version.outputs.version }}
            
            ### 📋 Changes
            ${{ steps.changelog.outputs.result }}
            
            ### 🐳 Docker Images
            - **Backend**: `sterenova/sterenova-studio-backend:${{ steps.get_version.outputs.version }}`
            - **Frontend**: `sterenova/sterenova-studio-frontend:${{ steps.get_version.outputs.version }}`
            
            ### 📦 Tags disponibles
            - `latest` - Dernière version stable
            - `${{ steps.get_version.outputs.version }}` - Version exacte
            - `${{ steps.get_version.outputs.version }}` - Version majeure.mineure
          draft: false
          prerelease: false
